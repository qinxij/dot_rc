set -g prefix C-a
unbind C-b

# sending the prefix to ather applications. such as VIM Emacs.. by 
# pressing the prefix tiwce. `C-a C-a`
bind C-a send-prefix

# Changing the default delay.
set -sg escape-time 1

# Setting the window and panes index
set -g base-index 1
set -g pane-base-index 1


#  set `;` as an alternative to `:`
unbind \;
bind \; command-prompt -I "" -p ":" ""
unbind u
bind u command-prompt -I "" -p "run>" "run '%%'"

# Creating a shortcut to reload the configuration.
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Splitting panes
bind | split-window -h
bind - split-window -v

# Remapping movement keys.
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
# cycle through the windows 
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# switch clients
bind -r C-n switch-client -n
bind -r C-p switch-client -p

# Resizing panes.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Handling the mouse.
setw -g mode-mouse on

set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# color
set -g default-terminal "screen-256color"
set-option -g default-shell /bin/zsh

# copy & past &scroll
setw -g mode-keys vi

# unbind [
bind [ copy-mode
# bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
bind-key -t vi-copy y copy-pipe "xclip -i -sel clipboard"
# bind m run "tmux show-buffer | xclip -i -sel clipboard"
# 
# # requirement: xclip
# # sudo zypper install xclip.
# bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# 
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Maximizing and restoring panes.
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp

unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# navgate session
bind -r ) switch-client -n
bind -r ( switch-client -p

# Moving windows between sessions
# default : `Prefix .`

# Recording program output to a log
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

set -g status-fg white
set -g status-bg black

setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

set -g pane-border-fg white
set -g pane-active-border-fg colour75

set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Centering the window list.
set-option -g status-justify "centre"

# status bar
set -g status-left-length 40
set -g status-left "#[fg=green]#S#[fg=white]>#[fg=green][#I]#[fg=white]>#[fg=green][#P]"
set -g status-right "#[fg=cyan]%d %b %R"

# Identifying Activity in Other Windows
setw -g monitor-activity on
set -g visual-activity on



#  # ========================================================
#  # for tmux-powerline
#  set-option -g status on
#  set-option -g status-interval 2
#  set-option -g status-utf8 on
#  set-option -g status-justify "centre"
#  set-option -g status-left-length 60
#  set-option -g status-right-length 90
#  set-option -g status-left "#(~/tmux-powerline/powerline.sh left)"
#  set-option -g status-right "#(~/tmux-powerline/powerline.sh right)"
#  
#  
#  set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
#  
#  bind C-[ run '~/path/to/tmux-powerline/mute_powerline.sh left'      # Mute left statusbar
#  bind C-] run '~/path/to/tmux-powerline/mute_powerline.sh right'     # Mute right statusbar
